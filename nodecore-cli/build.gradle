plugins {
    id "java"
    id 'org.jetbrains.kotlin.jvm'
    id "idea"
    id "application"
}

configurations.all {
    // check for updates every build for changing modules
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    implementation project(':veriblock-core')
    implementation project(':nodecore-grpc')
    implementation project(':veriblock-shell')

    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
    implementation group: 'commons-io', name: 'commons-io', version: '2.5'

    // Dependency Injection
    implementation "org.koin:koin-core:1.0.1"

    implementation group: 'joda-time', name: 'joda-time', version: '2.9.9'
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.11'
    implementation group: 'com.diogonunes', name: 'JCDP', version: '2.0.3.1'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    implementation group: 'org.jline', name: 'jline', version: '3.9.0'
    implementation group: 'org.jline', name: 'jline-terminal', version: '3.9.0'
    implementation group: 'org.jline', name: 'jline-terminal-jansi', version: '3.9.0'
    implementation 'io.netty:netty-tcnative-boringssl-static:2.0.7.Final'
    implementation group: 'com.opencsv', name: 'opencsv', version: '4.3.2'

    testImplementation 'junit:junit:4.12'
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

run {
    standardInput = System.in
    standardOutput = System.out

    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

ext {
    group = 'veriblock'
    println "archiveBaseName: $archivesBaseName"
    println "branch = ${release.grgit.branch.current.name}"

}

jar {
    archiveName = "$applicationName-${prettyVersion()}.jar"
    manifest {
        attributes 'Name': 'nodecore/cli',
                'Specification-Title': 'NodeCore Command-Line Interface',
                'Specification-Version': prettyVersion(),
                'Specification-Vendor': 'VeriBlock Foundation',
                'Implementation-Title': 'nodecore.cli',
                'Implementation-Version': prettyVersion(),
                'Implementation-Vendor': 'VeriBlock Foundation'
    }
}

applicationName = 'nodecore-cli'
mainClassName = 'nodecore.cli.ProgramKt'

distZip.archiveName = "$applicationName-${prettyVersion()}.zip"
distTar.archiveName = "$applicationName-${prettyVersion()}.tar"

startScripts {
    windowsStartScriptGenerator.template = resources.text.fromFile("windowsStartScript.txt")
}

apply plugin: 'jacoco'

jacocoTestReport {
    getAdditionalSourceDirs() from files(project.sourceSets.main.allJava.srcDirs)
    getSourceDirectories() from files(project.sourceSets.main.allSource.srcDirs)
    getClassDirectories() from files(project.sourceSets.main.output)

    reports {
        xml.enabled true
        html.enabled false
        csv.enabled false
    }
}
